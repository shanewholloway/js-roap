export * from './core.jsy'
import {sym_ao, sym_ao_latest, as_ao_iter_checked, ao_latest} from './core.jsy'


export function ao_push(xform) ::
  const [aod, ao_push] = ao_latest()
  if undefined !== xform ::
    aod.xform = as_fn(xform)

  ao_push.aod = aod
  ao_push[sym_ao_latest] = aod
  ao_push[sym_ao] = aod[sym_ao]
  return ao_push



export function ao_watch(ao_iter) ::
  ao_iter = as_ao_iter_checked(ao_iter)

  const [aod, ao_update] = ao_latest()
  ao_update.fin @ ao_iter
  aod.complete = _ao_walk @ ao_iter, ao_update
  return aod

async function _ao_walk(ao_iter, fn) ::
  for await const v of ao_iter ::
    await fn(v)



export function ao_update_ctx(ao_ctx_mgr) ::
  const [aod, ao_update] = ao_latest()

  ao_ctx_mgr = as_ao_iter_checked @
    ao_ctx_mgr(ao_update)

  ao_update.fin @ ao_ctx_mgr
  aod.ready = _ao_init @ ao_ctx_mgr, aod
  return aod

async function _ao_init(ao_ctx_mgr, aod) ::
  const {value: xform} = await ao_ctx_mgr.next()
  if 'function' === typeof xform ::
    aod.xform = xform
  return true

