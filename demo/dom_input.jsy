import {ao_pipe, ao_dom_listen} from 'roap'

const ao_tgt = ao_pipe @:
  * xgfold() ::
    let ns = {}
    while 1 ::
      let e = yield ns
      ns[e.k] = e.v

  xemit: ns => @: ...ns


ao_dom_listen(ao_tgt)
  .with_dom @
    document.querySelectorAll('input[type=range]')
    (elem, evt) => @: k: elem.id, v: elem.valueAsNumber
  .listen @ 'input', 'change',


const ao_tgt_rgb = @*>
  for await {aaa, bbb, ccc} of ao_tgt ::
    let r = (aaa*.255).toFixed(1)
    let g = (bbb*.255).toFixed(1)
    let b = (ccc*.255).toFixed(1)
    yield `rgb(${r}, ${g}, ${b})`
      

const ao_tgt_hsl = @*>
  for await {aaa, bbb, ccc} of ao_tgt ::
    let h = (aaa*0.36).toFixed(1)
    let s = (bbb/10).toFixed(1)
    let l = (ccc/10).toFixed(1)
    
    yield `hsl(${h}, ${s}%, ${l}%)`


::!>
  let el_rgb = document.querySelector('#tgt_rgb')
  for await let rgb of ao_tgt_rgb ::
    el_rgb.textContent = rgb
    el_rgb.style.backgroundColor = rgb

::!>
  let el_hsl = document.querySelector('#tgt_hsl')
  for await let hsl of ao_tgt_hsl ::
    el_hsl.textContent = hsl
    el_hsl.style.backgroundColor = hsl


::!>
  for await let e of ao_tgt ::
    console.log @ 'ao_tgt', e

