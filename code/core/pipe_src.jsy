import { _ao_pipe_src_base } from './pipe_base.jsy'
import { ao_drive } from './drive.jsy'

export const _ao_pipe_src = @{}
  __proto__: _ao_pipe_src_base

  with(xctx) ::
    if 'function' === xctx ::
      xctx = xctx(this)

    if xctx && xctx.next ::
      xctx.next(this)
      this.on_fin(xctx)
    return xctx

  feed(xsrc, xform) ::
    return ao_drive(xsrc, this, xform)

  bind_vec(... keys) ::
    return v => this.next @# ...keys, v

  bind_obj(key, ns) ::
    return v => this.next @: ...ns, [key]: v

