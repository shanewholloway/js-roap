import {_xinvoke, _xpipesrc} from './util.jsy'

const _r_ident = v => v

export async function ao_run(gen_in, notify=_r_ident) ::
  for await let v of _xinvoke(gen_in) ::
    notify(v)


export async function ao_drive(gen_in, gen_out, xform=_r_ident) ::
  gen_out = _xpipesrc(gen_out)
  for await let v of _xinvoke(gen_in) ::
    if undefined !== gen_out ::
      v = xform(v)
      let {done} = await gen_out.next(v)
      if done :: break


export function * iter_step(iter) ::
  let t = {}
  while 1 ::
    t = iter.next()
    if t.done ::
      return t.value
    else yield t.value

export async function * ao_step(ao_iter) ::
  let t = {}
  while 1 ::
    t = await ao_iter.next()
    if t.done ::
      return t.value
    else yield t.value

