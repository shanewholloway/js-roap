import {ao_check_done} from './util.jsy'
import {ao_fence_v, as_iter_proto} from './fence.jsy'


export function ao_push_stream(as_vec) ::
  let q=[], [fence, resume, abort] = ao_fence_v()

  return Object.assign @
    ao_stream_fence(fence),
    @{}
      abort
      push(... args) ::
        if true === as_vec ::
          q.push(args)
        else q.push(... args)

        resume(q)
        return q.length


export async function * ao_stream_fence(fence) ::
  try ::
    let p_ready = fence()
    while 1 ::
      let batch = await p_ready
      batch = batch.splice(0, batch.length)

      p_ready = fence()
      yield * batch

  catch err ::
    ao_check_done(err)

