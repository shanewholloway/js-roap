import {ao_check_done} from './util.jsy'
import {ao_run} from './drive.jsy'
import {ao_fence_obj} from './fence.jsy'


export function ao_split(iterable) ::
  let f_out = ao_fence_obj()
  f_out.when_run = _ao_run(iterable, f_out)
  f_out.g_in = iterable.g_in
  return f_out

export async function _ao_run(iterable, g_tap) ::
  try ::
    for await let v of iterable ::
      g_tap.next(v)

  catch err ::
    ao_check_done(err)

  finally ::
    g_tap.return()


export function ao_tap(iterable) ::
  let f_tap = ao_fence_obj()
  let ag_tap = _ao_tap(iterable, f_tap)
  ag_tap.f_tap = ag_tap.f_out = f_tap
  ag_tap.g_in = f_tap.g_in = iterable.g_in
  return [f_tap, ag_tap]

export async function * _ao_tap(iterable, g_tap) ::
  try ::
    for await let v of iterable ::
      g_tap.next(v)
      yield v

  catch err ::
    ao_check_done(err)

  finally ::
    g_tap.return()

