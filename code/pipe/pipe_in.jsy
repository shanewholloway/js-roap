import { _is_fn, _obj_assign } from '../core/_common.jsy'
import { ao_drive } from '../core/drive.jsy'

export const _ao_pipe_in_api = @{}
  as_pipe_in(self, g_in) ::

  with_ctx(xctx) ::
    if _is_fn(xctx) ::
      xctx = xctx(this)

    if xctx && xctx.next ::
      xctx.next(this)
      this.on_fin(xctx)
    return xctx

  feed(xsrc, xform) ::
    return ao_drive(xsrc, this, xform)

  bind_vec(... keys) ::
    return v => this.next @# ...keys, v

  bind_obj(key, ns) ::
    return v => this.next @: ...ns, [key]: v

export function _ao_pipe_in(g_in, self) ::
  return _obj_assign(g_in, _ao_pipe_in_api, self)

