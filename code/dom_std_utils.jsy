import {fn_getter} from './_common.jsy'


export function _dom_unpack_args(std, elem, dom_args) ::
  if 'string' === typeof elem ::
    elem = document.querySelector(elem)

  return ! dom_args || 0 === dom_args.length
    ? _dom_builtin(std, elem)
    : _as_dom_arg(elem, dom_args)


export function _dom_builtin(std, elem) ::
  let {tagName: tag, type} = elem
  tag = `tag:${tag.toLowerCase()}`

  const dom_args = type && std[`${tag} type:${type.toLowerCase()}`]
      || std[tag]
      || std._

  return 'function' === typeof dom_args
    ? dom_args.call(std, elem, std)
    : _as_dom_arg(elem, dom_args)


function _as_dom_arg(elem, dom_args) ::
  return Array.isArray(dom_args)
    ? @{} elem, evt_names: dom_args[0], on_evt: dom_args[1]
    : @{} elem, ... dom_args

