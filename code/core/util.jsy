
export const is_ao_iter = g =>
  null != g[Symbol.asyncIterator]

export const is_ao_fn = v_fn =>
  'function' === typeof v_fn
    && ! is_ao_iter(v_fn)


export const ao_done = Object.freeze @: ao_done: true
export const ao_check_done = err => ::
  if err !== ao_done && err && !err.ao_done ::
    throw err
  return true


export const _ag_copy = ({g_in}, ag_out) => @
  undefined === g_in ? ag_out : @
    ag_out.g_in = g_in
    ag_out

