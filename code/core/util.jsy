import {_obj_assign, _is_fn, is_ao_iter} from './_common.jsy'

export const _xinvoke = v_fn =>
  _is_fn(v_fn)
    ? v_fn()
    : v_fn

export function _xpipe_tgt(pipe) ::
  if _is_fn(pipe) ::
    pipe = pipe()
    pipe.next()
    return pipe

  return pipe.g_in || pipe


export {is_ao_iter}
export function * iter(gen_in) ::
  yield * _xinvoke(gen_in)
export async function * ao_iter(gen_in) ::
  yield * _xinvoke(gen_in)


export function fn_chain(tail, ctx) ::
  return _obj_assign @ chain, {chain, tail}
  function chain(fn) ::
    chain.tail = fn(chain.tail, ctx)
    return chain

